#!/bin/sh
#
# rc file for Deferred Event Java Worker
#
### BEGIN INIT INFO
# Provides:          deferred-event-java-worker
# Required-Start:    $network $local_fs $remote_fs
# Required-Stop:     $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: DeferredEventJavaWorker
# Description:       DeferredEventJavaWorker
### END INIT INFO

NAME="Deferred Event Java Worker"
SCRIPT_NAME="/etc/init.d/deferred-event-java-worker"


#
# You may change these values to match your installation
#
JAVA_HOME=/usr/bin/java
PLUGIN_PATH=/opt
FILE_NAME=DeferredEventJavaWorker.jar
USER=java_user

MESSAGE_QUEUE="rabbitmq"
EXECUTOR="fastcgi" # could be "shell" or "fastcgi"

LOG=/var/log/deferred-event-java-worker.log
PIDFILE=/var/run/deferred-event-java-worker.pid
#
# stop changing
#

#This is the command that will start the application
COMMAND="-Dexecutor=$EXECUTOR -DmessageQueue=$MESSAGE_QUEUE -jar $PLUGIN_PATH/$FILE_NAME"
touch $LOG
chown $USER $LOG


get_pid() {
  cat "$PIDFILE"
}

is_running() {
  [ -f "$PIDFILE" ] && ps `get_pid` > /dev/null 2>&1
}

#
# Start the application
#
do_start() {
      if is_running; then
        echo "$NAME is already running"
      else
        echo "Starting $NAME"
        start-stop-daemon -d $PLUGIN_PATH -c $USER --start -mp $PIDFILE -b --exec $JAVA_HOME -- $COMMAND 2>&1 $LOGFILE
      fi
}

#
# Stop the application
#
do_stop() {
  if is_running; then
    echo "Stopping $NAME"
    start-stop-daemon --stop -p $PIDFILE --oknodo
  else
    echo "$NAME is not running"
  fi
}

case "$1" in
    start)
        do_start
        ;;
    stop)
        do_stop
        ;;
    status)
        if is_running; then
            echo "$NAME is running"
        else
            echo "$NAME is stopped"
            exit 1
        fi
        ;;
    restart)
        do_stop
        sleep 1
        do_start
        ;;
    *)
        echo "Usage: $SCRIPT_NAME {start|stop|status|restart}" >&2
        exit 1
    ;;
esac

: